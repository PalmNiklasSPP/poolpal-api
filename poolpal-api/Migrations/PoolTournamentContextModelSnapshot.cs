// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using poolpal_api.Database;

#nullable disable

namespace poolpal_api.Migrations
{
    [DbContext(typeof(PoolPalDatabaseContext))]
    partial class PoolTournamentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("poolpal_api.Database.Entities.LeaderboardEntry", b =>
                {
                    b.Property<int>("ELO")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLosses")
                        .HasColumnType("int");

                    b.Property<int>("TotalWins")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("Leaderboard", (string)null);
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenPlayed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoolGameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall",
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 2,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall",
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 3,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall"
                        },
                        new
                        {
                            MatchId = 4,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall",
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 5,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall",
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 6,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall",
                            TournamentId = 2
                        },
                        new
                        {
                            MatchId = 7,
                            HasBeenPlayed = false,
                            MatchDate = new DateTime(2024, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoolGameType = "EightBall",
                            TournamentId = 2
                        });
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ELO")
                        .HasColumnType("int");

                    b.Property<string>("LoginId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SppTeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("SppTeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Avatar = "/static/avatars/avatar-default.webp",
                            Description = "Introducing NickeP, a master of precision and strategy on the pool table. Known for exceptional cue control and tactical gameplay, NickeP brings a unique blend of focus and flair to every match. With numerous victories under their belt, NickeP is a formidable opponent and a crowd favorite. Watch as NickeP lines up their shots, showcasing a perfect blend of skill and style.",
                            ELO = 1500,
                            LoginId = "STB\\NIPA01",
                            PlayerName = "NickeP",
                            SppTeamId = 1
                        },
                        new
                        {
                            PlayerId = 2,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "STB\\TIAL01",
                            PlayerName = "Timmy",
                            SppTeamId = 1
                        },
                        new
                        {
                            PlayerId = 3,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 2000,
                            LoginId = "login1",
                            PlayerName = "John Doe"
                        },
                        new
                        {
                            PlayerId = 4,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login2",
                            PlayerName = "Johnathan Doe"
                        },
                        new
                        {
                            PlayerId = 5,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login3",
                            PlayerName = "Johnny Dough"
                        },
                        new
                        {
                            PlayerId = 6,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login4",
                            PlayerName = "Jon Doe"
                        },
                        new
                        {
                            PlayerId = 7,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login5",
                            PlayerName = "Johannes Doe"
                        },
                        new
                        {
                            PlayerId = 8,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 750,
                            LoginId = "login6",
                            PlayerName = "John D."
                        },
                        new
                        {
                            PlayerId = 9,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login7",
                            PlayerName = "Jonny Doe"
                        },
                        new
                        {
                            PlayerId = 10,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login8",
                            PlayerName = "J. Doe"
                        },
                        new
                        {
                            PlayerId = 11,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login9",
                            PlayerName = "John Do"
                        },
                        new
                        {
                            PlayerId = 12,
                            Avatar = "/static/avatars/avatar-default.webp",
                            ELO = 1500,
                            LoginId = "login10",
                            PlayerName = "Jonathan Doe"
                        });
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.SppTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganisationUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SppTeams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Meet BoB: Where Business meets Brokers and billiards balls meet pockets! We're a team of tech aces and poolside tacticians. Whether it's tackling complex algorithms or tricky bank shots, our approach is all about precision, power, and a bit of playful banter. Get ready, competitors! In the digital and felt world, we're here to rack up successes, and pocket victories with a smile.",
                            FullName = "Business & Broker",
                            OrganisationUnit = "Tech",
                            ShortName = "BoB"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Private Web",
                            OrganisationUnit = "Tech",
                            ShortName = "PW"
                        },
                        new
                        {
                            Id = 99,
                            FullName = "Other",
                            OrganisationUnit = "Other",
                            ShortName = "Other"
                        });
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            Name = "Group A",
                            TournamentId = 1
                        },
                        new
                        {
                            GroupId = 2,
                            Name = "Group B",
                            TournamentId = 1
                        },
                        new
                        {
                            GroupId = 3,
                            Name = "Group C",
                            TournamentId = 2
                        },
                        new
                        {
                            GroupId = 4,
                            Name = "Group D",
                            TournamentId = 2
                        });
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTeamBased")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganiserId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantLimit")
                        .HasColumnType("int");

                    b.Property<string>("ParticipationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TournamentId");

                    b.HasIndex("OrganiserId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            TournamentId = 1,
                            Description = "Description for Tournament 1",
                            EndDate = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Format = "RoundRobin",
                            GameType = "EightBall",
                            IsTeamBased = false,
                            Name = "Tournament 1",
                            OrganiserId = 1,
                            ParticipantLimit = 10,
                            ParticipationType = "Open",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Open"
                        },
                        new
                        {
                            TournamentId = 2,
                            Description = "Description for Tournament 2",
                            EndDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Format = "SingleElimination",
                            GameType = "EightBall",
                            IsTeamBased = false,
                            Name = "Tournament 2",
                            OrganiserId = 1,
                            ParticipantLimit = 8,
                            ParticipationType = "Open",
                            StartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Open"
                        });
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.TournamentRegistration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TournamentId");

                    b.ToTable("TournamentRegistrations");

                    b.HasData(
                        new
                        {
                            RegistrationId = 1,
                            PlayerId = 1,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 2,
                            PlayerId = 2,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 3,
                            PlayerId = 3,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 4,
                            PlayerId = 4,
                            Status = "Pending",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 5,
                            PlayerId = 6,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 6,
                            PlayerId = 7,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 7,
                            PlayerId = 8,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 8,
                            PlayerId = 9,
                            Status = "Confirmed",
                            TournamentId = 1
                        },
                        new
                        {
                            RegistrationId = 9,
                            PlayerId = 7,
                            Status = "Confirmed",
                            TournamentId = 2
                        },
                        new
                        {
                            RegistrationId = 10,
                            PlayerId = 8,
                            Status = "Confirmed",
                            TournamentId = 2
                        });
                });

            modelBuilder.Entity("poolpal_api.Models.PoolTournamentApi.Models.PlayerMatch", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("EloChange")
                        .HasColumnType("int");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "MatchId");

                    b.HasIndex("MatchId");

                    b.ToTable("PlayerMatches");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            MatchId = 1,
                            EloChange = 0,
                            IsWinner = true,
                            Score = 0
                        },
                        new
                        {
                            PlayerId = 2,
                            MatchId = 1,
                            EloChange = 0,
                            IsWinner = false,
                            Score = 0
                        },
                        new
                        {
                            PlayerId = 1,
                            MatchId = 2,
                            EloChange = 0,
                            IsWinner = false,
                            Score = 0
                        },
                        new
                        {
                            PlayerId = 2,
                            MatchId = 2,
                            EloChange = 0,
                            IsWinner = true,
                            Score = 0
                        },
                        new
                        {
                            PlayerId = 1,
                            MatchId = 3,
                            EloChange = 0,
                            IsWinner = true,
                            Score = 0
                        },
                        new
                        {
                            PlayerId = 2,
                            MatchId = 3,
                            EloChange = 0,
                            IsWinner = false,
                            Score = 0
                        });
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Match", b =>
                {
                    b.HasOne("poolpal_api.Database.Entities.Tournament.Group", "Group")
                        .WithMany("Matches")
                        .HasForeignKey("GroupId");

                    b.HasOne("poolpal_api.Database.Entities.Tournament.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Player", b =>
                {
                    b.HasOne("poolpal_api.Database.Entities.SppTeam", "SppTeam")
                        .WithMany()
                        .HasForeignKey("SppTeamId");

                    b.Navigation("SppTeam");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.Group", b =>
                {
                    b.HasOne("poolpal_api.Database.Entities.Tournament.Tournament", "Tournament")
                        .WithMany("Groups")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.Tournament", b =>
                {
                    b.HasOne("poolpal_api.Database.Entities.Player", "Organiser")
                        .WithMany()
                        .HasForeignKey("OrganiserId");

                    b.Navigation("Organiser");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.TournamentRegistration", b =>
                {
                    b.HasOne("poolpal_api.Database.Entities.Tournament.Group", "Group")
                        .WithMany("Participants")
                        .HasForeignKey("GroupId");

                    b.HasOne("poolpal_api.Database.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("poolpal_api.Database.Entities.Tournament.Tournament", "Tournament")
                        .WithMany("Registrations")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Player");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("poolpal_api.Models.PoolTournamentApi.Models.PlayerMatch", b =>
                {
                    b.HasOne("poolpal_api.Database.Entities.Match", "Match")
                        .WithMany("PlayerMatches")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("poolpal_api.Database.Entities.Player", "Player")
                        .WithMany("PlayerMatches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Match", b =>
                {
                    b.Navigation("PlayerMatches");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Player", b =>
                {
                    b.Navigation("PlayerMatches");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.Group", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("poolpal_api.Database.Entities.Tournament.Tournament", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Matches");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
